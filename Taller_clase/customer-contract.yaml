openapi: 3.0.3
info:
  title: Swagger Customer - OpenAPI 3.0
  description: |-
    <div style="text-align: justify;">
      <h3>Maestría en Software - Diseño de patrones de API</h3>
      
      <img src="https://blogposgrados.ups.edu.ec/hs-fs/hubfs/Logo-Posgrados.png?width=1517&height=262&name=Logo-Posgrados.png" alt="Image" align="right" width="400"/>
      
      <p>This is a contract to manage person data based on the OpenAPI 3.0 specification.This is a contract that uses the API First-Contract principle to standardize the creation of endpoints to be used in our service and improve the development of our APIs.</p> 
    </div>
  termsOfService:   http://swagger.io/terms/
  contact:
    email: fquisiguina@est.ups.edu.ec
  license:
    name: Apache 2.0
    url:   http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0 - SNAPSHOT
  
externalDocs:
  description: Historia de Usuario
  url: https://github.com/users/fquisiguina/projects/1/views/1?filterQuery=assignee%3Afquisiguina&pane=issue&itemId=79803187

servers:
  - url: http://localhost:8090/api/v1
    description: service
  - url: http://localhost:8080/api/v1
    description: api-gateway
  
tags:
  - name: customer
    description: Everything about customer
    
paths:
  /customers:
    post:
      tags:
        - customer
      summary: Create a new customer
      description: Create a new customer with an Unique ID
      operationId: createCustomer
      parameters:
        - name: x-cm-client-request-id
          in: header
          description: Unique ID  for the request
          required: true
          schema:
            type: string
        - name: x-cm-client-user-agent
          in: header
          description: Type of device that consume the endpoint
          required: true
          schema:
            type: string
      requestBody: 
        description: Created customer object
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            example:
              identification: 0150749059
              firstName: Bryam
              lastName: Vega
              genre: M
      responses:
        '201':
          description: succesfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              
           
        '400':
          description: The server could not understand the request because of incorrect syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              
              
components: 
  schemas:
    Customer:
      type: object
      properties:
        id: 
          type: integer
          format: int64
        identification:
          type: string
          maxLength: 13
        firtsName:
          type: string
        lastName:
          type: string
        genre:
          type: string
      required:
        - identification
        - firtsName
        - lastName
        - genre
    Error:
      type: object
      properties:
        tittle:
          type: string
        detail:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      properties:
        message:
          type: string
  examples:
    example1:
      summary: example customer
      value:
        identification: 0150749059
        firstName: bryam
        lastName: vega
        genre: M 
          
        
        
        
      
  
    