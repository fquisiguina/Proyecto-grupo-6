version: '3.8'

services:
  
  service-registry:
    image: service-registry:latest
    build:
      dockerfile: ./Registry/registry/Dockerfile
    container_name: service-registry
    restart: always
    ports:
      - "8056:8056"
    environment:
      CUSTOM.SERVER.HOSTNAME: service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8056/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    working_dir: /app
    command: [ "java", "-jar", "app.jar" ]
    networks:
      - ups-grp6

  api-gateway:
    image: api-gateway:latest
    build:
      dockerfile: ./Gateway/gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8056/eureka/
#    depends_on:
#      service-registry:
#        condition: service_healthy
#      customer-service:
#        condition: service_healthy
    working_dir: /app
    command: [ "java", "-jar", "app.jar" ]
    networks:
      - ups-grp6
      
  customer-service:
    image: customer-service:latest
    build:
      dockerfile: ./CustomerService/customer-service/Dockerfile
    container_name: customer-service
    restart: always
    ports:
      - "8084:8084"
    environment:
      SERVER_DATABASE_POSTGRES: jdbc:postgresql://customer-db:5432/customer_db?currentSchema=customer
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8056/eureka
    depends_on:
      customer-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/api/v1/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    working_dir: /app
    command: [ "java", "-jar", "app.jar" ]
    networks:
      - ups-grp6
      
  customer-middleend:
    image: customer-middleend:latest
    build:
      dockerfile: ./CustomerService/customer-middleend/Dockerfile
    container_name: customer-middleend
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8056/eureka/
#    depends_on:
#      api-gateway:
#        condition: service_healthy
#      customer-service:
#        condition: service_healthy
    working_dir: /app
    command: [ "java", "-jar", "app.jar" ]
    networks:
      - ups-grp6

  customer-db:
    image: postgres:17.0-alpine3.20
    container_name: customer-db
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./CUSdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: customer_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d customer_db -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ups-grp6
      
  account-service:
    image: account-service:latest
    build:
      dockerfile: ./AccountService/account-service/Dockerfile
    container_name: account-service
    restart: always
    ports:
      - "8085:8085"
    environment:
      SERVER_DATABASE_POSTGRES: jdbc:postgresql://account-db:5432/accountdb?currentSchema=account
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8056/eureka
    depends_on:
      customer-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/api/v1/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    working_dir: /app
    command: [ "java", "-jar", "app.jar" ]
    networks:
      - ups-grp6

  account-middleend:
    image: account-middleend:latest
    build:
      dockerfile: ./AccountService/account-middleend/Dockerfile
    container_name: account-middleend
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8056/eureka/
#    depends_on:
#      api-gateway:
#        condition: service_healthy
#      customer-service:
#        condition: service_healthy
    working_dir: /app
    command: [ "java", "-jar", "app.jar" ]
    networks:
      - ups-grp6

  account-db:
    image: postgres:17.0-alpine3.20
    container_name: account-db
    restart: always
    ports:
      - 5433:5432
    volumes:
      - ./ACCdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: accountdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d accountdb -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ups-grp6

volumes:
  pgdata:

networks:
  ups-grp6:
    name: ups-grp6
    driver: bridge